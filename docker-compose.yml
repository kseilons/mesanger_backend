services:
  messenger-backend:
    build: .
    ports:
      - "80:80"
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=messenger_user
      - DB_NAME=messenger_db
      - DB_SSL_MODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=info
      - LOG_FORMAT=json
      - LOG_OUTPUT=stdout
      - VAULT_ENABLED=true
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=messenger-token
      - VAULT_MOUNT_PATH=secret
      - VAULT_NAMESPACE=""
    depends_on:
      - postgres
      - redis
      - vault
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
    networks:
      - messenger-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=messenger_user
      - POSTGRES_DB=messenger_db
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - messenger-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - messenger-network

  vault:
    image: hashicorp/vault:1.15.1
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=messenger-token
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_UI=true
    cap_add:
      - IPC_LOCK
    volumes:
      - vault_data:/vault/data
      - ./vault-init.sh:/vault-init.sh:ro
    command: >
      sh -c "
        vault server -dev -dev-root-token-id=messenger-token -dev-listen-address=0.0.0.0:8200 &
        sleep 5 &&
        /vault-init.sh &&
        tail -f /dev/null
      "
    networks:
      - messenger-network

volumes:
  postgres_data:
  redis_data:
  vault_data:

networks:
  messenger-network:
    driver: bridge

