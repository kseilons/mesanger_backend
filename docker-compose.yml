services:
  messenger-backend:
    build: .
    ports:
      - "80:80"
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=messenger_user
      - DB_NAME=messenger_db
      - DB_SSL_MODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=info
      - LOG_FORMAT=json
      - LOG_OUTPUT=stdout
      - VAULT_ENABLED=true
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=messenger-token
      - VAULT_MOUNT_PATH=secret
      - VAULT_NAMESPACE=""
      - KAFKA_ENABLED=true
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_GROUP_ID=messenger-backend
      - KAFKA_TOPIC_MESSAGES=messages
      - KAFKA_TOPIC_NOTIFICATIONS=notifications
      - KAFKA_TOPIC_USER_EVENTS=user_events
      - KAFKA_TOPIC_GROUP_EVENTS=group_events
      - WEBSOCKET_ENABLED=true
      - WS_READ_BUFFER_SIZE=1024
      - WS_WRITE_BUFFER_SIZE=1024
      - WS_PING_PERIOD=54
      - WS_PONG_WAIT=60
      - WS_WRITE_WAIT=10
      - WS_MAX_MESSAGE_SIZE=1048576
      - FILE_UPLOAD_ENABLED=true
      - FILE_STORAGE_TYPE=local
      - FILE_STORAGE_LOCAL_PATH=/app/uploads
      - FILE_STORAGE_MAX_FILE_SIZE=10485760
    depends_on:
      - postgres
      - redis
      - vault
      - kafka
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
    networks:
      - messenger-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=messenger_user
      - POSTGRES_DB=messenger_db
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - messenger-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - messenger-network

  vault:
    image: hashicorp/vault:1.15.1
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=messenger-token
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_UI=true
    cap_add:
      - IPC_LOCK
    volumes:
      - vault_data:/vault/data
      - ./vault-init.sh:/vault-init.sh:ro
    command: >
      sh -c "
        vault server -dev -dev-root-token-id=messenger-token -dev-listen-address=0.0.0.0:8200 &
        sleep 5 &&
        /vault-init.sh &&
        tail -f /dev/null
      "
    networks:
      - messenger-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - messenger-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    networks:
      - messenger-network

volumes:
  postgres_data:
  redis_data:
  vault_data:

networks:
  messenger-network:
    driver: bridge

